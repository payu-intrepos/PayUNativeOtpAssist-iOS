// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PayUNativeOtpAssist
import CoreTelephony
import Foundation
import PayUAnalytics
import PayUCrashReporter
@_exported import PayUNativeOtpAssist
import PayUNetworkReachability
import PayUParamsKit
import Swift
import SystemConfiguration
import UIKit
import WebKit
@objc public protocol PayUOtpAssistAPIProtocol : AnyObject {
  @objc func initiatePayment(paymentParam: PayUParamsKit.PayUPaymentParam, completion: @escaping (PayUNativeOtpAssist.VerifyPayment?, Swift.Error?) -> ())
  @objc func initiatePayment(postData: Swift.String, completion: @escaping (PayUNativeOtpAssist.VerifyPayment?, Swift.Error?) -> ())
  @objc func submitOTP(otp: Swift.String, completion: @escaping (PayUNativeOtpAssist.VerifyPayment?, Swift.Error?) -> ())
  @objc func resendOTP(completion: @escaping (PayUNativeOtpAssist.VerifyPayment?, Swift.Error?) -> ())
  @objc func cancelTransaction(completion: @escaping (PayUNativeOtpAssist.VerifyPayment?, Swift.Error?) -> ())
}
@objc public protocol PayUOtpAssistDelegate : AnyObject {
  @objc func onPaymentSuccess(merchantResponse: Swift.String?, payUResponse: Swift.String?)
  @objc func onPaymentFailure(merchantResponse: Swift.String?, payUResponse: Swift.String?)
  @objc func onError(errorCode: Swift.String?, errorMessage: Swift.String?)
  @objc func onPaymentCancel(isTxnInitiated: Swift.Bool)
  @objc optional func shouldHandleFallback(payUAcsRequest: PayUNativeOtpAssist.PayUAcsRequest) -> Swift.Bool
}
@_inheritsConvenienceInitializers @objc public class PayUOtpAssistConfig : ObjectiveC.NSObject {
  @objc public var themeColor: UIKit.UIColor
  @objc public var merchantLogo: UIKit.UIImage?
  @objc public var shouldShowMerchantSummary: Swift.Bool
  @objc public var merchantResponseTimeout: Swift.Int64
  @objc deinit
  @objc override dynamic public init()
}
extension UIDevice {
  public static let modelName: Swift.String
  public static let signalStrength: Swift.Int?
}
@_inheritsConvenienceInitializers @objc public class PayUOtpAssist : ObjectiveC.NSObject {
  @objc public static func open(parentVC: UIKit.UIViewController, paymentParam: PayUParamsKit.PayUPaymentParam, config: PayUNativeOtpAssist.PayUOtpAssistConfig? = nil, delegate: PayUNativeOtpAssist.PayUOtpAssistDelegate)
  @objc public static func open(parentVC: UIKit.UIViewController, postData: Swift.String, config: PayUNativeOtpAssist.PayUOtpAssistConfig? = nil, delegate: PayUNativeOtpAssist.PayUOtpAssistDelegate)
  public static func start()
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers public class VerifyPayment : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc @_inheritsConvenienceInitializers public class BinData : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc @_inheritsConvenienceInitializers public class MetaData : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc @_inheritsConvenienceInitializers public class ResendOtp : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc @_inheritsConvenienceInitializers public class SubmitOtp : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc @_inheritsConvenienceInitializers public class Result : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc @_inheritsConvenienceInitializers public class PostToBank : ObjectiveC.NSObject, Swift.Codable {
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@_inheritsConvenienceInitializers @objc public class PayUAcsRequest : ObjectiveC.NSObject {
  @objc public var issuerPostData: Swift.String?
  @objc public var issuerUrl: Swift.String?
  @objc public var acsTemplate: Swift.String?
  @objc public var transactionId: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
